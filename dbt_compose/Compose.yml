version: '3.8'
networks:
  app-network:
    driver: bridge
volumes:
  postgres_data:
services:
  dbpg:
    image: postgres:13
    container_name: dbpg_warehouse
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  dbt:
    build:
      context: ./dbt
    container_name: dbt_transform
    env_file:
      - ./.env
    environment:
      # Mapeia as vari√°veis do .env para os nomes que o dbt espera
      DB_HOST: dbpg
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_PORT: 5432
      DB_SCHEMA: db_dbt
    ports:
      - "8080:8080"
    volumes:
      - ./dbt:/usr/app
    networks:
      - app-network
    depends_on:
      dbpg:
        condition: service_healthy
    command: /bin/bash -c "dbt deps && dbt debug && dbt seed && dbt run && dbt docs generate && dbt docs serve --port 8080 --host 0.0.0.0"
